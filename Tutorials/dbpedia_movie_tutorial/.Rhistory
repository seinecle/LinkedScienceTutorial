library(SPARQL)
library(igraph)
library(network)
library(ergm)
# Live DBpedia endpoint
# endpoint <- 'http://live.dbpedia.org/sparql'
# options <- NULL
# Local Jena Fuseki endpoint
endpoint <- "http://localhost:3030/movie/sparql"
options <- "output=xml"
prefix <- c("db","http://dbpedia.org/resource/")
sparql_prefix <- "PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dc: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
"
q <- paste(sparql_prefix,
'SELECT ?actor ?movie ?director ?movie_date
WHERE {
?m dc:subject <http://dbpedia.org/resource/Category:American_films> .
?m rdfs:label ?movie .
FILTER(LANG(?movie) = "en")
?m dbp:released ?movie_date .
FILTER(DATATYPE(?movie_date) = xsd:date)
?m dbp:starring ?a .
?a rdfs:label ?actor .
FILTER(LANG(?actor) = "en")
?m dbp:director ?d .
?d rdfs:label ?director .
FILTER(LANG(?director) = "en")
}')
res <- SPARQL(url=endpoint,query=q,ns=prefix)$results
res
res$movie_date <- as.Date(as.POSIXct(res$movie_date,origin="1970-01-01")) # convert from seconds since 1970-01-01 to date
#
# Actor-movie relations, director as attribute of movie
#
actor_movie_matrix <- as.matrix(ifelse(table(res$actor,res$movie) > 0, 1, 0))
a_m <- graph.incidence(actor_movie_matrix)
md <- cbind(res$movie,res$director)
movie_directors <- md[!duplicated(md[,1]),]
n_actors <- dim(actor_movie_matrix)[1]
n_movies <- dim(actor_movie_matrix)[2]
n_directors <- length(unique(res$director))
# Set vertex properites
V(a_m)[1:n_actors]$kind <- "actor"
V(a_m)[n_actors+1:n_movies]$kind <- "movie"
V(a_m)[n_actors+1:n_movies]$director <- movie_directors[,2]
# Find dates of movies
md <- cbind(res$movie,res$date)
movie_dates <- md[!duplicated(md[,1]),]
V(a_m)[n_actors+1:n_movies]$date_label <- sapply(movie_dates,as.character) # convert to string for Gephi
V(a_m)[n_actors+1:n_movies]$date_epoch <- movie_dates # for coloring
# Remove non-ASCII characters (for Gephi)
V(a_m)$name <- iconv(V(a_m)$name,to='ASCII',sub="")
V(a_m)$director <- iconv(V(a_m)$director,to='ASCII',sub="")
# Use names as labels in Gephi
V(a_m)$Label <- V(a_m)$name
write.graph(a_m,'starring_dbpedia_american.graphml',format="graphml")
